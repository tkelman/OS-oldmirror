$Id$
/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-12 Bradley M. Bell

CppAD is distributed under multiple licenses. This distribution is under
the terms of the 
                    Eclipse Public License Version 1.0.

A copy of this license is included in the COPYING file of this distribution.
Please visit http://www.coin-or.org/CppAD/ for information on other licenses.
-------------------------------------------------------------------------- */

$begin speed_sacado$$
$spell
	SacadoDir
	CppAD
	Cygwin
$$

$index speed, test sacado$$
$index test, sacado speed$$
$index sacado, speed test$$

$section Speed Test Derivatives Using Sacado$$

$head Purpose$$
CppAD has a set of speed tests that are used to compare
Sacado with other AD packages.
This section links to the source code the Sacado speed tests
(any suggestions to make the Sacado results faster are welcome).

$head sacado_dir$$
To run these tests, you must include the $code configure$$ command line option
$codei%
	SACADO_DIR=%sacado_dir%
%$$
during $cref/installation/InstallUnix/sacado_dir/$$.


$head Running Tests$$
To build these speed tests, and run their correctness tests,
execute the following commands starting in the
$cref/work directory/InstallUnix/Work Directory/$$:
$codei%
	cd speed/sacado
	make test
%$$
You can then run the corresponding speed tests 
with the following command
$codei%
	./sacado speed %seed%
%$$
where $icode seed$$ is a positive integer.
See $cref speed_main$$ for more options.

$head C++ Compiler Flags$$
The C++ compiler flags used to build the Sacado speed tests are
$code
$verbatim%speed/sacado/makefile.am%5%# BEGIN OPTIMIZE%# END OPTIMIZE%$$
$$
where $code CXX_FLAGS$$ is specified by the 
$cref/configure/InstallUnix/Configure/$$ command.

$contents%
	speed/sacado/det_minor.cpp%
	speed/sacado/det_lu.cpp%
	speed/sacado/mat_mul.cpp%
	speed/sacado/ode.cpp%
	speed/sacado/poly.cpp%
	speed/sacado/sparse_hessian.cpp%
	speed/sacado/sparse_jacobian.cpp
%$$

$end
